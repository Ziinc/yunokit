alter table if exists "yunocontent"."content_authors" drop constraint "content_authors_content_id_fkey";

alter table if exists "yunocontent"."contents" drop constraint "contents_schema_id_fkey";

alter table if exists "yunocontent"."schemas" drop constraint "schemas_type_check";

alter table if exists "yunocontent"."contents" drop constraint "content_items_pkey";

drop index if exists "yunocontent"."content_items_pkey";

drop table if exists "yunocontent"."contents";

create table if not exists "yunocontent"."content_items" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone default now(),
    "deleted_at" timestamp with time zone,
    "data" jsonb,
    "uid" uuid not null default gen_random_uuid(),
    "title" text,
    "published_at" timestamp with time zone
);


alter table if exists "yunocontent"."content_items" enable row level security;

alter table if exists "yunocontent"."schemas" alter column "type" set default 'collection'::yunocontent.schema_type;

alter table if exists "yunocontent"."schemas" alter column "type" drop not null;

alter table if exists "yunocontent"."schemas" alter column "type" set data type yunocontent.schema_type using "type"::yunocontent.schema_type;

drop type if exists "yunocontent"."yunocontent.schema_type";

create unique index if not exists "content_items_pkey" on "yunocontent"."content_items" using btree (id);

alter table if exists "yunocontent"."content_items" add constraint "content_items_pkey" PRIMARY KEY using index "content_items_pkey";


