

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE SCHEMA IF NOT EXISTS "yunocontent";


ALTER SCHEMA "yunocontent" OWNER TO "postgres";


CREATE TYPE "yunocontent"."schema_type" AS ENUM (
    'single',
    'collection'
);


ALTER TYPE "yunocontent"."schema_type" OWNER TO "postgres";


SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "yunocontent"."authors" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "sc_user_id" "uuid",
    "user_id" "uuid",
    "pseudonym" "text",
    "first_name" "text",
    "last_name" "text",
    "description" "text",
    "metadata" "jsonb",
    "title" "text"
);


ALTER TABLE "yunocontent"."authors" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "yunocontent"."content_items_authors" (
    "id" bigint NOT NULL,
    "author_id" "uuid" NOT NULL,
    "content_id" "uuid" NOT NULL
);


ALTER TABLE "yunocontent"."content_items_authors" OWNER TO "postgres";


ALTER TABLE "yunocontent"."content_items_authors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "yunocontent"."content_items_authors_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "yunocontent"."content_items" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "schema_id" "uuid" NOT NULL
);


ALTER TABLE "yunocontent"."content_items" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "yunocontent"."schemas" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "archived_at" timestamp with time zone,
    "fields" "jsonb",
    "type" "text" NOT NULL,
    CONSTRAINT "schemas_fields_check" CHECK (("jsonb_typeof"("fields") = 'array'::"text")),
    CONSTRAINT "schemas_type_check" CHECK (("type" = ANY (ARRAY['single'::"text", 'collection'::"text"])))
);


ALTER TABLE "yunocontent"."schemas" OWNER TO "postgres";


ALTER TABLE ONLY "yunocontent"."authors"
    ADD CONSTRAINT "authors_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "yunocontent"."content_items_authors"
    ADD CONSTRAINT "content_items_authors_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "yunocontent"."content_items"
    ADD CONSTRAINT "content_items_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "yunocontent"."schemas"
    ADD CONSTRAINT "schemas_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "yunocontent"."authors"
    ADD CONSTRAINT "authors_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "yunocontent"."content_items_authors"
    ADD CONSTRAINT "content_items_authors_author_id_fkey" FOREIGN KEY ("author_id") REFERENCES "yunocontent"."authors"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "yunocontent"."content_items_authors"
    ADD CONSTRAINT "content_items_authors_content_id_fkey" FOREIGN KEY ("content_id") REFERENCES "yunocontent"."content_items"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "yunocontent"."content_items"
    ADD CONSTRAINT "content_items_schema_id_fkey" FOREIGN KEY ("schema_id") REFERENCES "yunocontent"."schemas"("id") ON DELETE RESTRICT;



ALTER TABLE "yunocontent"."authors" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "yunocontent"."content_items_authors" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "yunocontent"."content_items" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "yunocontent"."schemas" ENABLE ROW LEVEL SECURITY;


RESET ALL;
