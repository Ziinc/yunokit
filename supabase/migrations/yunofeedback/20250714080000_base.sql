create schema if not exists "yunofeedback";

create table "yunofeedback"."boards" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "name" text not null,
    "description" text
);

create table "yunofeedback"."issues" (
    "id" uuid not null default gen_random_uuid(),
    "board_id" uuid not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone not null default now(),
    "title" text not null,
    "description" text,
    "enable_voting" boolean not null default true,
    "approved" boolean not null default false
);

create table "yunofeedback"."votes" (
    "id" bigint generated by default as identity not null,
    "item_id" uuid not null,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now()
);

create unique index votes_user_unique on yunofeedback.votes (item_id, user_id);

alter table "yunofeedback"."boards" enable row level security;
alter table "yunofeedback"."issues" enable row level security;
alter table "yunofeedback"."votes" enable row level security;

create unique index boards_pkey on yunofeedback.boards using btree (id);
create unique index issues_pkey on yunofeedback.issues using btree (id);
create unique index votes_pkey on yunofeedback.votes using btree (id);

alter table "yunofeedback"."boards" add constraint "boards_pkey" primary key using index "boards_pkey";
alter table "yunofeedback"."issues" add constraint "issues_pkey" primary key using index "issues_pkey";
alter table "yunofeedback"."votes" add constraint "votes_pkey" primary key using index "votes_pkey";

alter table "yunofeedback"."issues" add constraint "issues_board_id_fkey" foreign key (board_id) references yunofeedback.boards(id) on delete cascade not valid;
alter table "yunofeedback"."issues" validate constraint "issues_board_id_fkey";

alter table "yunofeedback"."votes" add constraint "votes_issue_id_fkey" foreign key (item_id) references yunofeedback.issues(id) on delete cascade not valid;
alter table "yunofeedback"."votes" validate constraint "votes_issue_id_fkey";

alter table "yunofeedback"."votes" add constraint "votes_user_id_fkey" foreign key (user_id) references auth.users(id) on delete cascade not valid;
alter table "yunofeedback"."votes" validate constraint "votes_user_id_fkey";
