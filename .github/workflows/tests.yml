# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Tests

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - "app/**"
  pull_request:
    branches: ["main"]
    paths:
      - "app/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command: [test, lint, compile, ss]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.9
          cache: "npm"
          cache-dependency-path: |
            app/package-lock.json
            web/package-lock.json
            shared/package-lock.json
      - name: Install dependencies on shared
        run: npm ci
        working-directory: shared
      - name: Run ${{ matrix.command }}
        if: matrix.command != 'ss'
        working-directory: ./app
        run: npm ci && npm run ${{ matrix.command }}
      - name: Capture screenshots
        if: matrix.command == 'ss'
        working-directory: app
        shell: bash
        run: |
          npm ci
          npm run dev &
          echo $! > vite.pid
          ../scripts/wait-for-port.sh 8080
          npx playwright install --with-deps
          node scripts/screenshot.mjs
          kill $(cat vite.pid)
      - name: Upload screenshots
        if: matrix.command == 'ss'
        id: upload-screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: app/screenshots
      - name: Add screenshots to summary
        if: matrix.command == 'ss'
        working-directory: app
        shell: bash
        run: |
          for img in screenshots/*; do
            echo "![$(basename "$img")](${{ steps.upload-screenshots.outputs.artifact-url }}/$(basename "$img"))" >> "$GITHUB_STEP_SUMMARY"
          done
